[versions]
agp = "8.5.2"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.9.3"
compose-multiplatform = "1.7.1"
kotlin = "2.0.21"
kotlinx-coroutines = "1.9.0"
koin = "4.0.0"
ktor = "3.0.1"
ktlint = "12.1.1"
detekt = "1.23.7"
dokka = "1.9.20"
lifecycle = "2.8.4"
coil3 = "3.0.3"
coroutines = "1.9.0"
kotlinx-json = "1.7.3"
androidx-collection = "1.4.5"
kotlinx-collection-immutable = "0.3.7"
mokkery = "2.5.1"
turbine = "1.2.0"
adaptive = "1.0.1"
adaptive-window-size = "1.7.1"
navigation-compose = "2.8.0-alpha10"
navigation-material = "1.7.0-beta02"
konsist = "0.16.1"
kotest = "5.9.1"

[libraries]
# ANDROIDX
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-collection = { module = "androidx.collection:collection", version.ref = "androidx-collection" }

# KOIN
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-compose = { module = "io.insert-koin:koin-compose" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel" }
koin-android = { module = "io.insert-koin:koin-android" }

# KTOR
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

# LIFECYCLE
lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycle" }
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
lifecycle-viewmodel-savedstate = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycle" }
lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref ="lifecycle" }
lifecycle-common = { module = "org.jetbrains.androidx.lifecycle:lifecycle-common", version.ref ="lifecycle" }

# COIL
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3" }
coil-compose-core = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil3" }
coil-network-ktor2 = { module = "io.coil-kt.coil3:coil-network-ktor2", version.ref = "coil3" }
coil-network-ktor3 = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil3" }
coil-mp = { module = "io.coil-kt.coil3:coil", version.ref = "coil3" }

# NAVIGATION
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation-compose" }
navigation-material = { module = "org.jetbrains.compose.material:material-navigation", version.ref ="navigation-material" }

# KOTLINX
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json",version.ref = "kotlinx-json"}
kotlinx-collection-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-collection-immutable" }

# TEST
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
konsist = { module = "com.lemonappdev:konsist", version.ref = "konsist" }
## KOTEST
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }

# ADAPTIVE
adaptive = { module = "org.jetbrains.compose.material3.adaptive:adaptive", version.ref = "adaptive" }
adaptive-layout = { module = "org.jetbrains.compose.material3.adaptive:adaptive-layout", version.ref = "adaptive" }
adaptive-navigation = { module = "org.jetbrains.compose.material3.adaptive:adaptive-navigation", version.ref = "adaptive" }
adaptive-window-size = { module = "org.jetbrains.compose.material3:material3-window-size-class", version.ref = "adaptive-window-size" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
mokkery = { id = "dev.mokkery", version.ref = "mokkery" }
kotestMultiplatform = { id = "io.kotest.multiplatform", version.ref = "kotest" }

[bundles]
# KTOR
ktor = [
    "ktor-client-logging",
    "ktor-serialization-kotlinx-json",
    "ktor-client-core",
    "ktor-client-content-negotiation",
]

# LIFECYCLE
lifecycle = [
    "lifecycle-viewmodel",
    "lifecycle-viewmodel-compose",
    "lifecycle-viewmodel-savedstate",
    "lifecycle-runtime-compose",
    "lifecycle-common",
]

# COIL
coil = [
    "coil-compose",
    "coil-compose-core",
    "coil-network-ktor2",
    "coil-network-ktor3",
    "coil-mp",
]

# KOTLINX
kotlinx = [
    "kotlinx-coroutines-core",
    "kotlinx-serialization-json",
    "kotlinx-collection-immutable",
]
kotlinx-test = [
    "kotlin-test",
    "kotlin-test-coroutines",
]

# ADAPTIVE
adaptive = [
    "adaptive",
    "adaptive-layout",
    "adaptive-navigation",
    "adaptive-window-size",
]

# NAVIGATION
navigation = [
    "navigation-compose",
    "navigation-material"
]

# KOTEST
kotest = [
    "kotest-assertions-core",
    "kotest-framework-datatest",
    "kotest-framework-engine"
]